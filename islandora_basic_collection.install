<?php

/**
 * @file
 * islandora_basic_collection.install
 */
function islandora_basic_collection_install() {
  module_load_include('inc', 'islandora', 'RestConnection');
  global $user;
  global $base_root;

  try {
    $rest_connection = new RestConnection($user);
  } catch (Exception $e) {
    drupal_set_message(st('Unable to connect to the repository %e', array('%e' => $e)), 'error');
    return;
  }

  $content_model_query = $rest_connection->api->a->findObjects('query', 'pid=islandora:collectionCModel');
  if (empty($content_model_query['results'])) {
    try {
      $xml = file_get_contents(drupal_get_path('module', 'islandora_basic_collection') . '/xml/islandora_collection_CModel.xml');
      $rest_connection->api->m->ingest(array('string' => $xml));
    } catch (Exception $e) {
      drupal_set_message(st('Unable to install content models %e', array('%e' => $e)), 'error');
      return;
    }
    drupal_set_message(st('Content models installed!'));
  }
  else {
    drupal_set_message(st('Content models already exist!'), 'warning');
  }

  $collection_query = $rest_connection->api->a->findObjects('query', 'pid=islandora:root');
  if (empty($collection_query['results'])) {
    try {
      $xml = file_get_contents(drupal_get_path('module', 'islandora_basic_collection') . '/xml/islandora_root_collection.xml');
      $rest_connection->api->m->ingest(array('string' => $xml));
      $fedora_object = new FedoraObject('islandora:root', $rest_connection->repository);
      $datastream = new NewFedoraDatastream('TN', 'M', $fedora_object, $rest_connection->repository);
      $file_path = $base_root . '/' . drupal_get_path('module', 'islandora_basic_collection') . '/Crystal_Clear_filesystem_folder_grey.png';
      $datastream->label = 'Thumbnail';
      $datastream->mimetype = 'image/png';
      $datastream->setContentFromUrl($file_path);
      $fedora_object->ingestDatastream($datastream);
    } catch (Exception $e) {
      drupal_set_message(st('Unable to install collections %e', array('%e' => $e)), 'error');
      return;
    }
    drupal_set_message(st('Collections installed!'));
  }
  else {
    drupal_set_message(st('Collections already exist!'), 'warning');
  }
}

function islandora_basic_collection_uninstall() {
  module_load_include('inc', 'islandora', 'RestConnection');
  global $user;
  try {
    $rest_connection = new RestConnection($user);
  } catch (Exception $e) {
    drupal_set_message(st('Unable to connect to the repository %e', array('%e' => $e)), 'error');
    return;
  }

  $content_model_query = $rest_connection->api->a->findObjects('query', 'pid=islandora:collectionCModel');
  if (!empty($content_model_query['results'])) {
    try {
      $rest_connection->repository->purgeObject('islandora:collectionCModel');
    } catch (Exception $e) {
      drupal_set_message(st('Unable to purge content models %e', array('%e' => $e)), 'error');
      return;
    }
    drupal_set_message(st('Content models purged!'));
  }
  else {
    drupal_set_message(st('Content models don\'t exist!'), 'warning');
  }

  $collection_query = $rest_connection->api->a->findObjects('query', 'pid=islandora:root');
  if (!empty($collection_query['results'])) {
    try {
      $rest_connection->repository->purgeObject('islandora:root');
    } catch (Exception $e) {
      drupal_set_message(st('Unable to purge collections %e', array('%e' => $e)), 'error');
      return;
    }
    drupal_set_message(st('Collections purged!'));
  }
  else {
    drupal_set_message(st('Collections don\'t exist!'), 'warning');
  }
}