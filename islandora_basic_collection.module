<?php

/*
 * @file
 * islandora_basic_collection.module
 *
 * an Islandora module to handle basic image cmodels
 *
 *
 * This file is part of Islandora.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the program.  If not, see <http ://www.gnu.org/licenses/>.
 */

/**
 * Implements hook_menu().
 * we need some standard entry points so we can have consistent urls for different Object actions
 */
function islandora_basic_collection_menu() {
  $items = array();
  $items['islandora/object/%/manage/collection'] = array(
    'title' => 'Collection Related',
    'page callback' => 'islandora_basic_collection_manage_object',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_basic_collection_access',
    'access arguments' => array(2),
  );

  $items['admin/islandora/basic_collection'] = array(
    'title' => 'Islandora Basic Collection',
    'description' => 'Configure the basic Collection solution pack.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_basic_collection_admin'),
    'file' => 'admin/islandora_basic_collection.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  /* an example of adding a tab for view
    $items['islandora/object/%/view/collection'] = array(
    'title' => 'Collection View',
    'page callback' => 'islandora_basic_collection_view1',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_basic_collection_access',
    'access arguments' => array(2),
    ); */

  return $items;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function islandora_basic_collection_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if (module_exists('islandora_content_model_forms')) {
    // Add action link 
    if ($root_path == 'islandora/object/%/manage/collection') {
      $object_id = $router_item['page_arguments'][0];
      $item = menu_get_item("islandora/ingest_form/$object_id");
      $item['title'] = 'Add a repository item';
      if ($item['access']) {
        $data['actions']['output'][] = array(
          '#theme' => 'menu_local_action',
          '#link' => $item,
        );
      }
    }
  }
}

/**
 * This function is where we create the view for the related menu item
 * @param type $object_id
 * @return type
 */
function islandora_basic_collection_manage_object($object_id) {

  module_load_include('inc', 'islandora_basic_collection', 'includes/CollectionManagement');
  module_load_include('inc', 'islandora_basic_collection', 'includes/CollectionManagerTable');
  module_load_include('inc', 'islandora_basic_collection', 'includes/DeleteCollection');
  module_load_include('inc', 'islandora_basic_collection', 'includes/MoveCollection');
  module_load_include('inc', 'islandora_basic_collection', 'includes/ChildCollection');
  module_load_include('inc', 'islandora_basic_collection', 'includes/ManagePolicies');
  module_load_include('inc', 'islandora_basic_collection', 'includes/ChangeContentModels');

  $form = array();

  $form['collection_manager'] = array(
    '#type' => 'vertical_tabs',
    '#weight' => 0,
    '#prefix' => '',
  );

  $form['collection_manager']['create_child_collection'] = array(
    '#title' => t('Create Child Collection'),
    '#type' => 'fieldset',
  );

  $form['collection_manager']['create_child_collection']['form'] = drupal_get_form('islandora_create_child_collection_form', $object_id);

  $form['collection_manager']['manage_policies'] = array(
    '#type' => 'fieldset',
    '#title' => t('Manage Collection Policies'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['collection_manager']['manage_policies']['form'] = drupal_get_form('islandora_manage_policies_form', $object_id);

  $form['collection_manager']['change_content_models'] = array(
    '#type' => 'fieldset',
    '#title' => t('Change Content Models'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['collection_manager']['change_content_models']['form'] = drupal_get_form('islandora_change_content_models_form', $object_id);

  $form['collection_manager']['migrate_members'] = array(
    '#type' => 'fieldset',
    '#title' => t('Migrate Members'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['collection_manager']['migrate_members']['form'] = drupal_get_form('islandora_collection_migrate_form', $object_id);

  $form['collection_manager']['delete_members'] = array(
    '#type' => 'fieldset',
    '#title' => t('Delete Members of this Collection'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['collection_manager']['delete_members']['form'] = drupal_get_form('islandora_collection_deletion_form', $object_id);

  return $form;

//  return 'Collection CModel edit function ' . $object_id;
}

/**
 * determines whether or not to show this modules manage tab
 * @global object $user
 * @param string $object_id
 * @return boolean
 */
function islandora_basic_collection_access($object_id) {
  module_load_include('inc', 'islandora', 'RestConnection');
  global $user;
  try {
    $restConnection = new RestConnection($user);
    $fedora_object = new FedoraObject($object_id, $restConnection->repository);
  } catch (Exception $e) {
    return FALSE;
  }
  if (!isset($fedora_object)) {
    return FALSE;
  }
  $models = $fedora_object->models;
  $cmodel_list = islandora_basic_collection_islandora_get_types();
  foreach ($fedora_object->models as $model) {
    if (isset($cmodel_list[$model])) {
      return user_access(FEDORA_MANAGE);
    }
  }
  return FALSE;
}

/**
 * Theme registry function
 * We supply a pattern so we can overide templates at the theme level if needed.
 * we can append a pid to a template and the new template file will be called (the pids
 * colon should be replaced with a dash)
 * @return array
 */
function islandora_basic_collection_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_basic_collection' => array(
      'template' => 'islandora-basic-collection',
      'pattern' => 'islandora_basic_collection__', //we can add pids to the end of this pattern in our preprocess function
// and templates will be able to have have a pid appended to the template name to overide a template on a per object basis
//an example template would be named islandora-basic-image--islandora-27.tpl.phps
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_basic_collection_grid' => array(
      'template' => 'islandora-basic-collection-grid',
      'pattern' => 'islandora_basic_collection_grid__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_basic_collection_management_form_table' => array(
      'arguments' => array('element' => NULL),
      'file' => 'includes/CollectionManagerTable.inc',
    ),
  );
}

/**
 * tells the main module what types of objects we support.  This is used to determine whether or not
 * this module should attempt to respond.
 * If ISLANDORA_VIEW_HOOK = TRUE this function will populate the default tab.  This should be configurable
 * in the modules admin section, otherwise two modules can populate one tab.
 * @return array
 *   array of content model pids that this module supports
 */
function islandora_basic_collection_islandora_get_types() {
  $types = array();
  $types['islandora:collectionCModel'][ISLANDORA_VIEW_HOOK] = variable_get('islandora_basic_collection_use_for_default_tab', TRUE);
//$types['islandora:collectionCModel'][ISLANDORA_EDIT_HOOK] = FALSE;
  return $types;
}

/**
 * this modules implentation of view_object hook will handle objects of type islandora:basicImageCModel and  info:fedora/islandora:sp_basic_image
 * as registered in its return types
 * Other modules would handle objects of other types.
 * @param Object $object
 *    a tuque fedora object
 * @param object $user
 * @param string $page_number
 * @param string $page_size
 * @return string
 *    themed html
 */
function islandora_basic_collection_islandora_view_object($object, $user) {
//global $user;
  $cmodel_list = islandora_basic_collection_islandora_get_types();
  $models = $object->models;
  foreach ($object->models as $model) {
    if (isset($cmodel_list[$model][ISLANDORA_VIEW_HOOK]) && $cmodel_list[$model][ISLANDORA_VIEW_HOOK] == TRUE) {
      $display = (empty($_GET['display'])) ? 'list' : $_GET['display'];
      if ($display == 'grid') {
        $output = theme('islandora_basic_collection_grid', array('islandora_object' => $object));
      }
      else {
        $output = theme('islandora_basic_collection', array('islandora_object' => $object));
      }
      return array('Collection View' => $output);
    }
  }
  return NULL;
}

/**
 * list view preprocess
 * currently just calls normal view preprocess as variables are the same
 * @param type $variables 
 */
function islandora_basic_collection_preprocess_islandora_basic_collection_grid(&$variables) {
  islandora_basic_collection_preprocess_islandora_basic_collection($variables);
}

/**
 * 
 * @global type $base_url
 * @param array $variables
 *   an array of variables that will be passed to the theme function
 */
function islandora_basic_collection_preprocess_islandora_basic_collection(&$variables) {
// base url
  global $base_url;
// base path
  global $base_path;
  $islandora_object = $variables['islandora_object'];
  module_load_include('inc', 'islandora', 'includes/islandora_dublin_core');
  try {
    $dc = $islandora_object['DC']->content;
    $dc_object = Dublin_Core::import_from_xml_string($dc);
  } catch (Exception $e) {
    drupal_set_message(t('Error retrieving object %s %t', array('%s' => $islandora_object->id, '%t' => $e->getMessage())), 'error');
  }
  $page_number = (empty($_GET['page'])) ? 0 : $_GET['page'];
  $page_size = (empty($_GET['pagesize'])) ? variable_get('islandora_basic_collection_page_size', '10') : $_GET['pagesize'];
  $results = islandora_basic_collection_get_objects($islandora_object, $page_number, $page_size);
  $total_count = count($results);
  pager_default_initialize($total_count, $page_size);

  $pager = theme('pager', array('quantity' => $total_count));
  $variables['pager'] = $pager;
  $variables['islandora_dublin_core'] = $dc_object;
  $variables['islandora_object_label'] = $islandora_object->label;
  $variables['theme_hook_suggestions'][] = 'islandora_basic_collection__' . str_replace(':', '_', $islandora_object->id);
  if (isset($islandora_object['OBJ'])) {
    $full_size_url = $base_url . '/islandora/object/' . $islandora_object->id . '/datastream/OBJ/view';
    $variables['islandora_full_img'] = '<img src="' . $full_size_url . '"/>';
  }
  if (isset($islandora_object['TN'])) {
    $thumbnail_size_url = $base_url . '/islandora/object/' . $islandora_object->id . '/datastream/TN/view';
    $variables['islandora_thumbnail_img'] = '<img src="' . $thumbnail_size_url . '"/>';
  }
  if (isset($islandora_object['MEDIUM_SIZE'])) {
    $medium_size_url = $base_url . '/islandora/object/' . $islandora_object->id . '/datastream/MEDIUM_SIZE/view';
    $variables['islandora_medium_img'] = '<img src="' . $medium_size_url . '"/>';
  }

  $associated_objects_array = array();
  $start = $page_size * ($page_number);
  $end = min($start + $page_size, $total_count);

  for ($i = $start; $i < $end; $i++) {
    $pid = $results[$i]['object']['value'];
    $fc_object = islandora_basic_collection_get_object($pid);
    if (!isset($fc_object)) {
      continue; //null object so don't show in collection view;
    }
    $associated_objects_array[$pid]['object'] = $fc_object;
    try {
      $dc = $fc_object['DC']->content;
      $dc_object = Dublin_Core::import_from_xml_string($dc);
      $associated_objects_array[$pid]['dc_array'] = $dc_object->as_formatted_array();
    } catch (Exception $e) {
      drupal_set_message(t('Error retrieving object %s %t', array('%s' => $islandora_object->id, '%t' => $e->getMessage())), 'error');
    }
    $object_url = 'islandora/object/' . $pid;
    $thumbnail_img = '<img src="' . $base_path . $object_url . '/datastream/TN/view"' . '/>';
    $title = $results[$i]['title']['value'];
    $associated_objects_array[$pid]['pid'] = $pid;
    $associated_objects_array[$pid]['path'] = $object_url;
    $associated_objects_array[$pid]['title'] = $title;
    $associated_objects_array[$pid]['class'] = strtolower(preg_replace('/[^A-Za-z0-9]/', '-', $pid));
    if (isset($fc_object['TN'])) {
      $thumbnail_img = '<img src="' . $base_path . $object_url . '/datastream/TN/view"' . '/>';
    }
    else {
      $thumbnail_img = '<img src="http://codesprint-centos.islandora.ca/islandora/object/islandora%3A52/datastream/TN"' . '/>';
    }
    $associated_objects_array[$pid]['thumbnail'] = $thumbnail_img;
    $associated_objects_array[$pid]['title_link'] = l($title, $object_url, array('html' => TRUE, 'attributes' => array('title' => $title)));
    $associated_objects_array[$pid]['thumb_link'] = l($thumbnail_img, $object_url, array('html' => TRUE, 'attributes' => array('title' => $title)));
  }
  $variables['associated_objects_array'] = $associated_objects_array;
}

function islandora_basic_collection_get_object($object_id) {
  module_load_include('inc', 'islandora', 'RestConnection');
  global $user;
  try {
    $restConnection = new RestConnection($user);
    $fedora_object = new FedoraObject($object_id, $restConnection->repository);
  } catch (Exception $e) {
    //drupal_set_message(t('Error getting Islandora object %s', array('%s' => $object_id)), 'error');
    return NULL;
  }
  return $fedora_object;
}

function islandora_basic_collection_get_objects($object, $page_number = 1, $page_size = 5) {
  $query = 'select $object $title $content from <#ri>
             where ($object <fedora-model:label> $title
             and $object <fedora-model:hasModel> $content
             and ($object <fedora-rels-ext:isMemberOfCollection> <info:fedora/' . $object->id . '>
             or $object <fedora-rels-ext:isMemberOf> <info:fedora/' . $object->id . '>)
             and $object <fedora-model:state> <info:fedora/fedora-system:def/model#Active>)
             minus $content <mulgara:is> <info:fedora/fedora-system:FedoraObject-3.0>
             order by $title';
  module_load_include('inc', 'islandora', 'RestConnection');
  $query_array = array('query' => $query, 'type' => 'itql', 'pid' => $object->id, 'page_size' => $page_size, 'page_number' => $page_number);
  drupal_alter('islandora_basic_collection_query', $query_array);
  global $user;
  try {
    $restConnection = new RestConnection($user);
    $queryObject = new RepositoryQuery($restConnection->connection);
    $results = $queryObject->query($query_array['query'], $query_array['type']);
  } catch (Exception $e) {
    drupal_set_message(t('Islandora Error getting related objects for %s', array('%s' => $object->id)), 'error');
    return"";
  }
  return $results;
}

function islandora_basic_collection_islandora_ingest_get_information($models, $object) {
  if (in_array('islandora:collectionCModel', $models) && isset($object['COLLECTION_POLICY'])) {
    try {
      module_load_include('inc', 'islandora_basic_collection', 'includes/CollectionPolicy');
      $return = array();
      $policy = new CollectionPolicy($object['COLLECTION_POLICY']->content);
      $return['models'] = $policy->getContentModels();
      $return['relationship'] = $policy->getRelationship();

      return $return;
    } catch (Exception $e) {
      drupal_set_message(t('Islandora Error getting collection info for %s', array('%s' => $object->id)), 'error');
    }
  }
}